# SPDX-FileCopyrightText: 2022 RTE FRANCE
#
# SPDX-License-Identifier: Apache-2.0
name: Continuous Deployment - JavaDocs

on:
  pull_request:
    types: [ labeled, closed ]

jobs:
  build:
    # if: github.event.pull_request.merged && github.actor != 'dependabot[bot]' && (github.event.label.name == 'javadoc' || github.event.label.name == 'documentation')
    if: ${{ github.actor != 'dependabot[bot]' && (github.event.label.name == 'javadoc' || github.event.label.name == 'documentation') }}
    name: Java Docs
    runs-on: ubuntu-latest
    env:
      ref_branch: ${{ github.head_ref || github.ref_name }} 
      from_branch: dependabot/javadoc-${{ github.head_ref || github.ref_name }}-${{ github.event.pull_request.number }}
      target_branch: gh-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Create custom Maven Settings.xml
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          output_file: custom_maven_settings.xml
          servers: '[{ "id": "github-packages-compas", "username": "OWNER", "password": "${{ secrets.GITHUB_TOKEN }}" }]'

      - name: Configure Git
        run: |
          git config --global user.name '${{ secrets.CONFIG_CI_USER_NAME }}'
          git config --global user.email '${{ secrets.CONFIG_CI_USER_EMAIL }}'

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY_BOT}}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Prepare Pull Request branch & commit files
        run: |
          mvn -s custom_maven_settings.xml clean javadoc:aggregate -P javadoc
          mkdir -p docs/javadoc
          yes | cp -Rf target/site/apidocs/* docs/javadoc/
          git checkout -b temp
          git add docs/javadoc/
          git commit -m "[dependabot/javadoc/temp]: update javadoc"
          git fetch origin ${{ env.target_branch }}
          git checkout ${{ env.target_branch }}
          git checkout -b ${{ env.from_branch }}
          git config pull.rebase false
          git merge --no-commit --strategy-option theirs temp --allow-unrelated-histories
          git status
          git reset -- . 
          git status
          git add docs/javadoc/
          git status
          git commit -a -m "[dependabot/javadoc]: update javadoc"

      # - name: Commit files
      #   run: |
      #     git add docs/javadoc/
      #     git commit -m "[dependabot/javadoc]: update javadoc"

      # Note that will fail if branch already exists.
      - name: Push Git Branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.from_branch }}

      # Note that will silently fail if PR already exists.
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source_branch: ${{ env.from_branch }}
          destination_branch: ${{ env.target_branch }}
          pr_title: "Docs: Update Java docs repository"
          pr_body: "Automatically created from CI workflow"
          pr_label: "documentation,javadoc"